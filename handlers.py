from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from utils import save_to_csv, normalize_phone_number
import logging

router = Router()

WELCOME_TEXT_TEMPLATE = (
    "–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –í–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –≤ –∫–æ–º–ø–∞–Ω–∏–∏ ¬´–°–∞–º–æ–∫–∞—Ç¬ª üí∏\n"
    "–£—Å–ª–æ–≤–∏—è:\n"
    "‚è¨ –¥–æ 220000‚ÇΩ –≤ –º–µ—Å—è—Ü\n"
    "‚è¨ –æ—Ç 5200‚ÇΩ –∑–∞ –ø–æ–ª–Ω—ã–π –¥–µ–Ω—å\n"
    "‚è¨ –í—ã–ø–ª–∞—Ç—ã –ö–ê–ñ–î–´–ô –î–ï–ù–¨!\n"
    "‚è¨ –ï—Å—Ç—å –º–µ—Å—Ç–æ –¥–ª—è –æ—Ç–¥—ã—Ö–∞, –µ–¥—ã, –∑–∞—Ä—è–¥–∫–∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏, –∫—É–ª–µ—Ä —Å –≤–æ–¥–æ–π –∏ —Ç—É–∞–ª–µ—Ç\n"
    "üí´ –ú–æ–∂–µ–º –≤—ã–¥–∞—Ç—å –≤–µ–ª–æ—Å–∏–ø–µ–¥\n"
    "üí´ –ì—Ä–∞—Ñ–∏–∫ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç–µ –í—ã\n"
    "üí´ –õ—é–±–æ–π —Ä–∞–π–æ–Ω –≥–æ—Ä–æ–¥–∞\n"
    "–í—Å—ë —á—Ç–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è —ç—Ç–æ üì± —Ç–µ–ª–µ—Ñ–æ–Ω, –∏ –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –∑–∞—Ä–∞–±–æ—Ç–∫–∞–º —É–∂–µ —Å–µ–≥–æ–¥–Ω—è!\n"
    "–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –æ—Ç–≤–µ—Ç, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –í–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –Ω–∞—á–∞–ª–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ –∏ –æ—Ç–≤–µ—Ç–∏–º –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã."
)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@router.message(F.text == "/start")
async def send_welcome(message: Message):
    user_name = message.from_user.first_name
    if user_name:
        welcome_text = f"–î–æ–±—Ä–æ–≥–æ –¥–Ω—è, {user_name}!\n\n{WELCOME_TEXT_TEMPLATE}"
    else:
        welcome_text = f"–î–æ–±—Ä–æ–≥–æ –¥–Ω—è!\n\n{WELCOME_TEXT_TEMPLATE}"

    contact_keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    await message.answer(welcome_text, reply_markup=contact_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—É–Ω–∫—Ç–∞ "–í–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è"
@router.message(F.text == "–í–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è")
async def handle_age_restrictions(message: Message):
    await message.answer("–í–æ–∑—Ä–∞—Å—Ç –æ—Ç 18 –ª–µ—Ç.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—É–Ω–∫—Ç–∞ "–ù–∞–ª–∏—á–∏–µ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–∞"
@router.message(F.text == "–ù–∞–ª–∏—á–∏–µ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–∞")
async def handle_citizenship(message: Message):
    await message.answer("–ü—Ä–∏–Ω–∏–º–∞–µ–º –≥—Ä–∞–∂–¥–∞–Ω —Å—Ç—Ä–∞–Ω: –†–§, –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω, –ê—Ä–º–µ–Ω–∏—è, –ë–µ–ª–∞—Ä—É—Å—å, –ö–∏—Ä–≥–∏–∑–∏—è.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—É–Ω–∫—Ç–∞ "–ì–æ—Ä–æ–¥–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è"
@router.message(F.text == "–ì–æ—Ä–æ–¥–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è")
async def handle_cities(message: Message):
    await message.answer(
        "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –ú–æ—Å–∫–≤–∞, –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫, –ë–∞—Ä–Ω–∞—É–ª, –¢—É–ª–∞, –ö–∞–ª—É–≥–∞, –ö–∞–∑–∞–Ω—å, –£—Ñ–∞, –ß–µ—Ä–µ–ø–æ–≤–µ—Ü, "
        "–ù–æ–≥–∏–Ω—Å–∫, –û—Ä–µ—Ö–æ–≤–æ-–ó—É–µ–≤–æ, –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä, –†–æ—Å—Ç–æ–≤, –ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥, –¢—é–º–µ–Ω—å, –ö–æ–ª–æ–º–Ω—ã."
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—É–Ω–∫—Ç–∞ "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
@router.message(F.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def return_to_main_menu(message: Message):
    await send_welcome(message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ —Ç–µ–∫—Å—Ç–∞
@router.message(F.text)
async def get_phone_number(message: Message, bot, admin_id: int):
    user_id, user_name, text = message.from_user.id, message.from_user.first_name, message.text

    # –ü—Ä–æ–±—É–µ–º –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    normalized_number = normalize_phone_number(text)

    if normalized_number:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
        save_to_csv(user_id, user_name, normalized_number, text)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
        notification = (
            f"–ù–æ–≤—ã–π –Ω–æ–º–µ—Ä –æ—Ç {user_name or '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'} (ID: {user_id}):\n"
            f"–í–≤–µ–¥—ë–Ω–Ω—ã–π: {text}\n–ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π: {normalized_number}"
        )
        try:
            await bot.send_message(admin_id, notification)
        except Exception as e:
            logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É: {e}")

        # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await message.answer(f"–°–ø–∞—Å–∏–±–æ! –í–∞—à –Ω–æ–º–µ—Ä {normalized_number} –ø—Ä–∏–Ω—è—Ç. –ú—ã —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è!")
    else:
        # –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
        menu_keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–í–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è")],
                [KeyboardButton(text="–ù–∞–ª–∏—á–∏–µ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–∞")],
                [KeyboardButton(text="–ì–æ—Ä–æ–¥–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è")],
                [KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
            ],
            resize_keyboard=True
        )
        await message.answer(
            "–ï—Å–ª–∏ —É –í–∞—Å –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, —Ç–æ –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø—É–Ω–∫—Ç –º–µ–Ω—é –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –í–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
            reply_markup=menu_keyboard
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞
@router.message(F.contact)
async def handle_contact(message: Message, bot, admin_id: int):
    if message.contact:
        user_id = message.from_user.id
        user_name = message.from_user.first_name
        phone_number = message.contact.phone_number

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞
        save_to_csv(user_id, user_name, phone_number, "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º'")

        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
        notification = (
            f"–ù–æ–≤—ã–π –∫–æ–Ω—Ç–∞–∫—Ç –æ—Ç {user_name or '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'} (ID: {user_id}):\n"
            f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone_number}"
        )
        try:
            await bot.send_message(admin_id, notification)
        except Exception as e:
            logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É: {e}")

        await message.answer("–°–ø–∞—Å–∏–±–æ! –í–∞—à –Ω–æ–º–µ—Ä —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
    else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞'.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
@router.message(F.text == "–í–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è")
async def handle_age_restrictions(message: Message):
    await message.answer("–í–æ–∑—Ä–∞—Å—Ç –æ—Ç 18 –ª–µ—Ç.")

@router.message(F.text == "–ù–∞–ª–∏—á–∏–µ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–∞")
async def handle_citizenship(message: Message):
    await message.answer("–ü—Ä–∏–Ω–∏–º–∞–µ–º –≥—Ä–∞–∂–¥–∞–Ω —Å—Ç—Ä–∞–Ω: –†–§, –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω, –ê—Ä–º–µ–Ω–∏—è, –ë–µ–ª–∞—Ä—É—Å—å, –ö–∏—Ä–≥–∏–∑–∏—è.")

@router.message(F.text == "–ì–æ—Ä–æ–¥–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è")
async def handle_cities(message: Message):
    await message.answer(
        "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –ú–æ—Å–∫–≤–∞, –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫, –ë–∞—Ä–Ω–∞—É–ª, –¢—É–ª–∞, –ö–∞–ª—É–≥–∞, –ö–∞–∑–∞–Ω—å, –£—Ñ–∞, –ß–µ—Ä–µ–ø–æ–≤–µ—Ü, "
        "–ù–æ–≥–∏–Ω—Å–∫, –û—Ä–µ—Ö–æ–≤–æ-–ó—É–µ–≤–æ, –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä, –†–æ—Å—Ç–æ–≤, –ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥, –¢—é–º–µ–Ω—å, –ö–æ–ª–æ–º–Ω—ã."
    )

@router.message(F.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def return_to_main_menu(message: Message):
    await send_welcome(message)


